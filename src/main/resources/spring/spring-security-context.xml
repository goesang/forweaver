<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:security="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
          http://www.springframework.org/schema/beans/spring-beans.xsd
          http://www.springframework.org/schema/security
          http://www.springframework.org/schema/security/spring-security.xsd">


<security:http pattern="/favicon.ico" security="none" />

   <!-- Stateless RESTful service using Basic authentication -->
<security:http pattern="/g/*/*.git/**">
<security:intercept-url pattern='/g/*/*.git/**' access='ROLE_USER' />
<security:http-basic />
<security:session-management session-authentication-strategy-ref="sas"/>
</security:http>

<!-- Empty filter chain for the login page -->
<security:http pattern="/resources/**" security="none"/>

<!-- Additional filter chain for normal users, matching all other requests -->
<security:http pattern="/**" auto-config='true' use-expressions="true">
<security:intercept-url pattern="/login" access="isAnonymous()" />
<security:intercept-url pattern="/join" access="isAnonymous()" />
<security:intercept-url pattern="/check" access="isAnonymous()" />
<security:intercept-url pattern="/" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/manage" access="hasRole('ROLE_USER')" />

<security:intercept-url pattern="/community/**" access="isAnonymous() or isAuthenticated()" />
<security:intercept-url pattern="/community/add" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/community/*/delete" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/community/*/update" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/community/*/repost-add" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/community/*/edit" access="hasRole('ROLE_USER')" />

<security:intercept-url pattern="/project/*/*/add" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/project/*/*/delete" access="hasRole('ROLE_USER')" />
<security:intercept-url pattern="/project/*/*/push" access="hasRole('ROLE_USER')" />

<security:intercept-url pattern="/lecture/" access="isAnonymous() or isAuthenticated()" />
<security:intercept-url pattern="/lecture/page**" access="isAnonymous() or isAuthenticated()" />
<security:intercept-url pattern="/lecture/tags**" access="isAnonymous() or isAuthenticated()" />

<security:intercept-url pattern='/lecture/*' access="hasRole('ROLE_USER')"/>
<security:intercept-url pattern='/lecture/*/delete' access="hasRole('ROLE_USER')"/>
<security:intercept-url pattern='/lecture/*/coummunity**' access="hasRole('ROLE_USER')"/>
<security:intercept-url pattern='/lecture/*/example**' access="hasRole('ROLE_USER')"/>
<security:intercept-url pattern='/lecture/*/weaver**' access="hasRole('ROLE_USER')"/>
<security:intercept-url pattern='/lecture/*/join' access="hasRole('ROLE_USER')"/>

<security:form-login login-page='/login'  default-target-url='/' />
<security:session-management session-authentication-strategy-ref="sas"/>
<security:logout />
</security:http> 

<bean id="sas" class="org.springframework.security.web.authentication.session.ConcurrentSessionControlStrategy">
    <property name="maximumSessions" value="1" />
    <constructor-arg name="sessionRegistry" ref="sessionRegistry" />
</bean>

<bean id="sessionRegistry" class="org.springframework.security.core.session.SessionRegistryImpl" />  
    
    <security:authentication-manager>
        <security:authentication-provider ref="daoAuthenticationProvider"/>

    </security:authentication-manager>

    <bean id="daoAuthenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
          <property name="userDetailsService" ref="userDetailsService"/>
           <!--<property name="passwordEncoder" ref="passwordEncoder"/>-->
          <!-- Enable the following if you are using a salt with the password encoding -->
          <!-- <property name="saltSource" ref="saltSource"/> -->
    </bean>
    
</beans>